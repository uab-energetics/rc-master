version: '3.3'

volumes:
  rc-authentication-db:
  rc-backend-db:
  rc-publications-db:
  rc-pipelines-db:

networks:
  default:
    external:
      name: research-coder

services:

  ## FRONT END ANGULAR APP
  rc-client:
    container_name: rc-client
    # image: gcr.io/meta-research-data-portal/github-uab-energetics-rc-client:master
    build:
      context: ./rc-client
      dockerfile: Dockerfile.dev
    volumes:
      - ./rc-client/src:/app/src
      - ./rc-client/e2e:/app/e2e
    ports:
      - 4200:4200


  ## BACKEND SERVICES

  # API Gateway

  rc-api-gateway:
    container_name: rc-api-gateway
    # image: gcr.io/meta-research-data-portal/github-uab-energetics-rc-api-gateway:master
    build:
      context: ./rc-api-gateway
      dockerfile: Dockerfile.dev
    volumes:
      - ./rc-api-gateway/src:/app/src
    env_file: .environments/.env.gateway
    environment:
      RC_BACKEND_HOST: rc-backend:8000
      RC_AUTHENTICATION_HOST: rc-authentication 
      RC_PUBLICATIONS_HOST: rc-publications
      PORT: 80
    ports:
      - 8000:80

  # Authentication Service

  rc-authentication:
    container_name: rc-authentication
    restart: unless-stopped
    image: gcr.io/meta-research-data-portal/github-uab-energetics-rc-authentication:master
    # build:
    #   context: ./rc-authentication
    #   dockerfile: Dockerfile.dev
    volumes:
      - .keys/rc-auth.key:/private-key.pem
      - .keys/rc-auth.key.pub:/public-key.pub
      # - ./rc-authentication/src:/app/src
      # - ./rc-authentication/test:/app/test
    env_file: .env
    environment:
      RABBITMQ_HOST: rc-rabbitmq
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
      MONGO_HOST: rc-authentication-db
      JWT_PRIVATE_KEY: /private-key.pem
      JWT_PUBLIC_KEY: /public-key.pub
    ports:
      - 8001:80

  rc-authentication-db:
    image: mongo:latest
    container_name: rc-authentication-db
    volumes:
      - rc-authentication-db:/data/db
    ports:
      - 27017:27017

  # Monolith

  rc-backend:
    container_name: rc-backend
#    image: gcr.io/meta-research-data-portal/github-uab-energetics-research-coder-api:master
    build: 
        context: ./rc-backend
        dockerfile: Dockerfile.dev
    volumes:
      - .keys/rc-auth.key.pub:/rc-auth.key.pub
      - ./rc-backend/app:/app/app
      - ./rc-backend/tests:/app/tests
      - ./rc-backend/config:/app/config
      - ./rc-backend/database:/app/database
      - ./rc-backend/resources:/app/resources
      - ./rc-backend/routes:/app/routes
    env_file: .environments/.env.api
    environment:
      DB_HOST: rc-backend-db
      DB_PORT: 3306
      JWT_PUBLIC_KEY: /rc-auth.key.pub
      AUTH_API_SECRET: secret
      PUBLICATION_SERVICE_HOST: http://rc-publications
      RABBITMQ_HOST: rc-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    ports:
      - 8002:8000

  rc-backend-queue-worker:
      container_name: rc-backend-queue-worker
#      image: gcr.io/meta-research-data-portal/github-uab-energetics-research-coder-api:master
      restart: unless-stopped
      build:
        context: ./rc-backend
        dockerfile: Dockerfile.dev
      volumes:
        - .keys:/.keys
        - ./rc-backend/app:/app/app
        - ./rc-backend/tests:/app/tests
        - ./rc-backend/config:/app/config
        - ./rc-backend/database:/app/database
        - ./rc-backend/resources:/app/resources
        - ./rc-backend/routes:/app/routes
      env_file: .environments/.env.api
      environment:
        DB_HOST: rc-backend-db
        DB_PORT: 3306
        JWT_PUBLIC_KEY: /.keys/rc-auth.key.pub
        AUTH_API_SECRET: secret
        PUBLICATION_SERVICE_HOST: http://rc-publications
        RABBITMQ_HOST: rc-rabbitmq
        RABBITMQ_PORT: 5672
        RABBITMQ_USER: guest
        RABBITMQ_PASSWORD: guest
      command: php artisan rabbitmq:listen

  rc-backend-db:
    image: mysql:5.7
    container_name: rc-backend-db
    volumes:
      - rc-backend-db:/var/lib/mysql
    ports:
      - 33060:3306
    environment:
      - MYSQL_DATABASE=research-coder
      - MYSQL_USER=homestead
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret

  # Publications Service

  rc-publications:
    container_name: rc-publications
    build:
      context: ./rc-publications
      dockerfile: Dockerfile.dev
    volumes:
      - ./rc-publications/src:/app/src
      - ./rc-publications/test:/app/test
    environment:
      RABBITMQ_HOST: rc-rabbitmq
      MYSQL_HOST: rc-publications-db
      MYSQL_DB: publications
      MYSQL_USER: root
      MYSQL_PASS: secret
    ports:
      - 8004:80

  rc-publications-db:
    image: mysql:5.7
    container_name: rc-publications-db
    volumes:
      - rc-publications-db:/var/lib/mysql
    ports:
      - 33061:3306
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: publications

#  rc-extraction:
#    container_name: rc-extraction
#    build:
#      context: ./rc-extraction
#      dockerfile: Dockerfile.dev
#    volumes:
#      - ./rc-extraction/src:/app/src
#      - ./rc-extraction/test:/app/test
#    environment:
#      RABBITMQ_HOST: rc-rabbitmq
#      MYSQL_HOST: rc-extraction-db
#      MYSQL_DB: extraction
#      MYSQL_USER: root
#      MYSQL_PASS: secret
#    ports:
#      - 8006:80

#  rc-extraction-db:
#    image: mysql:5.7
#    container_name: rc-extraction-db
#    ports:
#      - 33062:3306
#    environment:
#      MYSQL_ROOT_PASSWORD: secret
#      MYSQL_DATABASE: extraction

  # # Pipelines Service
  
  # rc-pipelines:
  #   container_name: rc-pipelines
  #   build:
  #     context: ./rc-pipelines
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - ./rc-pipelines/src:/app/src
  #     - ./rc-pipelines/test:/app/test
  #   environment:
  #     RABBITMQ_HOST: rc-rabbitmq
  #     MYSQL_HOST: rc-pipelines-db
  #     MYSQL_DB: pipes
  #     MYSQL_USER: root
  #     MYSQL_PASS: secret
  #   ports:
  #     - 8005:80

  # rc-pipelines-db:
  #   image: mysql:5.7
  #   container_name: rc-pipelines-db
  #   volumes:
  #     - rc-pipelines-db:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: secret
  #     MYSQL_DATABASE: pipes

  # RabbitMQ

  rc-rabbitmq:
    image: rabbitmq:3-management
    container_name: rc-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - 15672:15672
      - 5672:5672
